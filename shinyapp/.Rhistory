# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
#Clear working space
rm(list=ls())
#Set local system
Sys.setlocale('LC_ALL','C')
#set working directory
setwd("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/Data_visualization/new/")
#load library required for the app
library(shiny)
library(shinythemes)
library(shinydashboard)
library(DT)
library(shinyWidgets)
library(dplyr)
library(png)
library(ggplot2)
library(plotly)
library (plyr)
library(splitstackshape)
library(RColorBrewer)
library(tidyr)
library(stringr)
library(ggnetwork)
library(networkD3)
library(dplyr)
library(igraph)
library(intergraph)
library(sna)
####load datafiles####
#Sygen
#SCIRehab
# Define UI for application that draws a histogram
ui <- dashboardPage(
####Dashboard Header####
dashboardHeader(title = "Dashboard",
##Messages
dropdownMenu(type = "messages",
messageItem(
from = "Sales Dept",
message = "Sales are steady this month."
),
messageItem(
from = "New User",
message = "How do I register?",
icon = icon("question"),
time = "13:45"
),
messageItem(
from = "Support",
message = "The new server is ready.",
icon = icon("life-ring"),
time = "2014-12-01"
)
),
###Notification
dropdownMenu(type = "notifications",
notificationItem(
text = "5 new users today",
icon("users")
),
notificationItem(
text = "12 items delivered",
icon("truck"),
status = "success"
),
notificationItem(
text = "Server load at 86%",
icon = icon("exclamation-triangle"),
status = "warning"
)
),
##Task Menue
dropdownMenu(type = "tasks", badgeStatus = "success",
taskItem(value = 90, color = "green","Documentation"),
taskItem(value = 17, color = "aqua","Project X"),
taskItem(value = 75, color = "yellow","Server deployment"),
taskItem(value = 80, color = "red", "Overall project")
)
),
####Dashboard Sidebar####
dashboardSidebar(
sidebarSearchForm(textId = "searchText", buttonId = "searchButton",
label = "Search..."),
sidebarMenu(
menuItem('Home', tabName = "home", icon = icon('home')),
menuItem("Sygen", tabName = "sygen", icon = icon("database"),
menuSubItem('Study Details', tabName = 'study_details_sygen', icon = icon("info-circle")),
menuSubItem('Cohort Summary', tabName = 'cohort_summary_sygen', icon = icon("chart-pie")),
menuSubItem('Blood Marker', tabName = 'blood_marker_sygen', icon = icon("syringe")),
menuSubItem('Drug Summary', tabName = 'common_drugs_sygen', icon = icon("pills")),
menuSubItem('Disease-modyfing Effects', tabName = 'outcome_common_drugs_sygen', icon = icon("chart-bar"))),
menuItem("SCI Rehab", tabName = "sci_rehab", icon = icon("accessible-icon"),
menuSubItem('Study Details', tabName = 'study_details_scirehab', icon = icon("info-circle")),
menuSubItem('Cohort Summary', tabName = 'cohort_summary_scirehab', icon = icon("chart-pie")),
menuSubItem('Blood marker', tabName = 'blood_marker_scirehab', icon = icon("syringe")),
menuSubItem('Drug Summary', tabName = 'common_drugs_scirehab', icon = icon("pills")),
menuSubItem('Disease-modyfing Effects', tabName = 'outcome_common_drugs_scirehab', icon = icon("chart-bar")))
)
),
####Dashboard Body####
dashboardBody(
#  ## changing theme
# shinyDashboardThemes(
#     theme = "boe_website"
#   ),
fluidPage(
#Set the color of the slider according to their oder of appearance. https://divadnojnarg.github.io/blog/customsliderinput/
#setSliderColor(c("#a42929 ", "#a42929"), c(1, 2)),
chooseSliderSkin("Flat"),
##ui tabs
tabItems(
tabItem("home", "hometab content"),
##Sygen: Overview#####
tabItem("sygen", "Sygen tab content"),
##Sygen: Study Details#####
#Valid colors are: red, yellow, aqua, blue, light-blue, green, navy, teal, olive, lime, orange, fuchsia, purple, maroon, black.
tabItem("study_details_sygen",
#Title of tab
mainPanel(strong("The Sygen Multicenter Acute Spinal Cord Injury Study", style = "font-size:22px"),
br(),
br(),
#Study objectives
strong("Objectives", style='font-size:18px'),
p("To determine efficacy and safety of Sygen in acute spinal cord injury.", style = "font-size:16px"),
#Preliminary results
strong("Summary of preliminary data", style='font-size:  18px'),
p("An earlier, single-center trial in 28 patients showed an improvement (50.0% vs. 7.1%, P < 0.034) in marked recovery with Sygen.", style = "font-size:16px"),
#Study methods
strong("Methods",style="font-size:18px"),
p(span(em('Study design.')),"Randomized, double-blind, sequential,
multicenter clinical trial of two doses Sygen (i.e., low-dose GM-1: 300 mg intravenous loading dose followed by 100 mg/d x 56 days or high-dose GM-1:00 mg intravenous loading dose followed by 200 mg/d x 56 days) versus
placebo. All patients received the National Acute Spinal Cord Injury Study (NASCIS-2) protocol dosage of methylprednisolone. Based on a potential adverse interaction between concomitant MPSS and GM-1 administration,
the initial dose of GM-1 was delayed until after the steroids were given (mean onset of study drug, 54.9 hours).", style = " font-size:16px"),
p(span(em('Inclusion/exclusion criteria.')),"For inclusion in Sygen, patients were required to have at least one lower extremity with a substantial motor deficit. Patients with spinal cord transection
or penetration were excluded, as were patients with a cauda equina, brachial or lumbosacral plexus, or peripheral nerve injury. Multiple trauma cases were included as long as they were not so severe
as to preclude neurologic evaluation. It is notable that this requirement of participating in a detailed neurologic exam excluded major head trauma cases and also intubated
chest trauma cases.", style = " font-size:16px"),
p(span(em('Assessments.')),"Baseline neurologic assessment included both the AIS and detailed American Spinal Injury Association (ASIA) motor and
sensory examinations. Additionally, the Modified Benzel Classification and the ASIA motor and
sensory examinations were performed at 4, 8, 16, 26, and 52
weeks after injury. The Modified Benzel Classification was
used for post-baseline measurement because it rates walking
ability and, in effect, subdivides the broad D category of the
AIS. Because most patients have an unstable spinal fracture at
baseline, it is not possible to assess walking ability at that time;
hence the use of different baseline and follow-up scales.
Marked recovery was defined as at least a two-grade equivalent
improvement in the Modified Benzel Classification from the
baseline AIS. The primary efficacy assessment was the proportion of patients with marked recovery at week 26. The secondary efficacy
assessments included the time course of marked recovery and
other established measures of spinal cord function (the ASIA
motor and sensory scores, relative and absolute sensory levels
of impairment, and assessments of bladder and bowel
function).", style = " font-size:16px"),
#Concomitant medication
p(span(em('Concomitant medications.')),"The use of medications delivered alongside the study medication (i.e., GM-1) was rigorously tracked.
For each concomitant drug administered during the trial, the dosage, reason for administration, and the timing of administration were recorded.", style = " font-size:16px"),
#Study results
strong("Results",style="font-size:18px"),
p("Of 797 patients recruited, 760 were included in the analysis.", span(strong("The prospectively planned analysis at the prespecified endpoint time for all patients was negative.", style="color:red")),
"The negative finding of the Sygen study is considered Class I Medical Evidence by the spinal cord injury Committee of the
American Association of Neurological Surgeons (AANS) and the Congress of Neurological Surgeons (CNS). Subsequent analyses of the Sygen
data have been performed to characterize the trajectory and extent of spontaneous recovery from acute spinal cord injury.", style = " font-size:16px")
),
##Change font style: style = "font-family: 'times'; font-size:16px")
column( width =4,
br(),
br(),
br(),
box(
title = span("GM1-ganglioside", style='font-size:18px'),
width = 9,
height = 600,
#To change type of box use status= (more info: https://ibb.co/mYhkcn); Valid statuses are: primary, success, info, warning, danger
status=  "warning",
# background = "aqua",
"Sygen (monosialotetrahexosylganglioside GM1 sodium salt) is a naturally occurring compound in cell membranes of mammals and is especially abundant in the membranes of the central nervous system.
Acute neuroprotective and longer-term regenerative effects in multiple experimental models of ischemia and injury have been reported. The proposed mechanisms of action of GM1 include
anti-excitotoxic activity, apoptosis prevention, and potentiation of neuritic sprouting and the effects of nerve growth factors.",
tags$br(),
tags$br(),
#to have a line break in the text:
# tags$div(
#   "a piece of text", tags$br(),
#   "this will start from the new line now", tags$br(),
#   "and this as well",
#   "but not this" )
collapsible = F,
imageOutput("gm1")
)),
box(span(strong("References"), br(),"[1] Geisler FH, Coleman WP, Grieco G, et al. (2001); Recruitment and early treatment in a multicenter study of acute spinal cord injury. Spine (Phila Pa 1976) [PMID: 11805612]",br(),
"[2] Geisler FH, Coleman WP, Grieco G, et al. (2001); The Sygen multicenter acute spinal cord injury study. Spine (Phila Pa 1976) [PMID: 11805614]", style='font-size:14px'),
width=8
)
),
####Sygen: Cohort Summary####
tabItem("cohort_summary_sygen",
fluidRow(
# box(plotOutput("plot1", height = 250)),
box(imageOutput('sygen_summary'))
)
),
####Sygen: Blood markers####
tabItem("blood_marker_sygen", "Blood marker Sygen"),
####Sygen: commonly administered drugs####
tabItem("common_drugs_sygen",
#fluidRow(strong("Pharmacological management of spinal cord injury and its secondary complications", style = "font-size:22px"),
navbarPage("", id = "common_drugs_sygen_myNavbar",
tabPanel("Number of Drugs per Day",
fluidPage(
#add slider
div(style="width: 200px;", sliderInput(
inputId = "days_since_injury_range",
label = "Days since injury",
min=0,
max=365,
value=c(1,30))),
# Input: Animation with custom interval (in ms)
# to control speed, plus looping
div(style="width: 200px;",sliderInput("days_since_injury_animated", "Days post injury (animated):",
min = 0, max = 365,
value = 1, step = 1,
animate =
animationOptions(interval = 300, loop = TRUE))),
#add checkbox that allows to select multiple choices for sex
checkboxGroupInput("checkGroup_sex", strong("Sex", style='font-size:14px'),
choices = list("female" = 1, "male" = 2), selected = c(1,2)),
#add checkbox that allows to select multiple choices for injury severity
checkboxGroupInput("checkGroup_injury_severity", strong("Injury severity", style='font-size:14px'),
choices = list("AIS A" = 1, "AIS B" = 2,
"AIS C" = 3, "AIS D" = 4), selected = c(1:4)), #default all are selected
#add checkbox that allows to select multiple choices for injury level
checkboxGroupInput("checkGroup_injury_level", strong("Injury level", style='font-size:14px'),
choices = list("Cervical" = 1, "Thoracic" = 2,
"Lumbar" = 3), selected = c(1:3)))#default all are selected
),
tabPanel("Number of Drugs per Patient",
fluidPage(
#add slider
div(style="width: 200px;", sliderInput(
inputId = "days_since_injury_range",
label = "Days since injury",
min=0,
max=365,
value=c(1,30))),
# Input: Animation with custom interval (in ms)
# to control speed, plus looping
div(style="width: 200px;",sliderInput("days_since_injury_animated", "Days post injury (animated):",
min = 0, max = 365,
value = 1, step = 1,
animate =
animationOptions(interval = 300, loop = TRUE))),
#add checkbox that allows to select multiple choices for sex
checkboxGroupInput("checkGroup_sex", strong("Sex", style='font-size:14px'),
choices = list("female" = 1, "male" = 2), selected = c(1,2)),
#add checkbox that allows to select multiple choices for injury severity
checkboxGroupInput("checkGroup_injury_severity", strong("Injury severity", style='font-size:14px'),
choices = list("AIS A" = 1, "AIS B" = 2,
"AIS C" = 3, "AIS D" = 4), selected = c(1:4)), #default all are selected
#add checkbox that allows to select multiple choices for injury level
checkboxGroupInput("checkGroup_injury_level", strong("Injury level", style='font-size:14px'),
choices = list("Cervical" = 1, "Thoracic" = 2,
"Lumbar" = 3), selected = c(1:3)))#default all are selected
)
)
),
####Sygen: Drugs with disease-modifing effects####
tabItem("outcome_common_drugs_sygen", "Disease-modyfing Effects Sygen content"),
####SCIRehab: Overview####
tabItem("sci_rehab", "SCI Rehab tab content"),
####SCIRehab: Study details####
tabItem("study_details_scirehab",
#Title of tab
mainPanel(strong("Spinal Cord Injury Rehabilitation Study, United States, 2007-2010", style = "font-size:22px"),
br(),
br(),
#Study objectives
strong("Summary", style='font-size:18px'),
p("In an effort to understand the relationship between the rehabilitation process and outcomes, the SCIRehab study collected data about
rehabilitation interventions across 7 disciplines during the inpatient rehabilitation of 1,376 people with spinal cord injury (SCI).
This study used practice-based evidence methods to relate the details of the rehabilitation process to outcomes after controlling for
individual demographic and injury characteristics.", style = "font-size:16px"),
#Study methods
strong("Methods",style="font-size:18px"),
p(span(em('Study design.')),"Longitudinal, observational, prospective event-based cohort study. ", style = " font-size:16px"),
p(span(em('Cohort Summary.')),"Upon consent, the SCIRehab study enrolled individuals aged >12 years with traumatic spinal cord injury who were rehabilitated at six participating rehabilitation centers from 2007
through 2009. Participating centers included Rocky Mountain Regional Spinal Injury System at Craig Hospital, Shepherd Center, Atlanta GA; Rehabilitation Institute of Chicago, Chicago,
IL; Carolinas Rehabilitation, Charlotte, NC; the Mount Sinai Medical Center, New York, NY; and National Rehabilitation Hospital, Washington, DC. Patients were followed for first year
post-injury and were excluded if they spent two or more weeks at a non-participating rehabilitation center. Details of more than 460,000 interventions provided to 1,257 patients were documented by over 1,000
clinicians at the six participating centers. Patient demographics and injury characteristics were extracted from the patient medical record (part of the National Institute on Disability and Rehabilitation
Research Spinal Cord Injury Model Systems Form I).", style = " font-size:16px"),
#Concomitant medication
p(span(em('Concomitant medications.')),"The SCIRehab study rigorously tracked the use of all commonly administered drugs. For each drug administered, route, dosage and dosing
(i.e., start and end date, frequency) were abstracted directly from medical records. However, drug indication was not recorded. The drug data has not been published.", style = " font-size:16px")
),
box(span(strong("References"), br(),"[1] Whiteneck G, Gassaway J, Dijkers M, Jha A. (2009); New approach to study the contents and outcomes of spinal cord injury rehabilitation: the SCIRehab Project. J Spinal Cord Med [PMID: 19810627]",br(),
"[2] Whiteneck G, Gassaway J, Dijkers M, Backus D et al. (2011); Inpatient treatment time across disciplines in spinal cord injury rehabilitation. J Spinal Cord Med [PMID: 21675353]", style='font-size:14px'),
width=8
)
),
####SCIRehab: Cohort Summary####
tabItem("cohort_summary_scirehab", "cohort_summary_scirehab SCIRehab content"),
####SCIRehab: Blood marker information####
tabItem("blood_marker_scirehab", "Blood marker SCIRehab"),
####SCIRehab: Commonly administered drugs####
tabItem("common_drugs_scirehab", "Drug Summary SCIRehab content"),
####SCIRehab: Drugs with disease-modifing effects####
tabItem("outcome_common_drugs_scirehab", "Disease-modyfing Effects SCIRehab content")
), tags$head(
tags$style(HTML(".main-sidebar { font-size: 18px; }")) #change the font size to 20
)
)
)
)
####Server####
server <- function(input, output) {
output$tabset1Selected <- renderText({
input$tabset1
})
# demographics<- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/Data_visualization/new/Data_cleaning/Data/sex.csv", header = T, sep = ',')
#       output$plot1 <- renderPlot({
#
#   ggplot(demographics, aes(x=as.factor(sexcd), y=n , fill=as.factor(sexcd)))
#     geom_col() theme_minimal()scale_fill_manual(values=c("#DB1B87", "#6F1BDB"))
#     # ggtitle(" ")
#     # coord_polar("y", start=0)
#     # scale_y_discrete(labels = scales::percent)
#
# })
output$gm1 <- renderImage({
return(list(src = "/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/Data_visualization/new/www/gm1.png",type = "image/png",alt = "gm1", width = "120ptx"))
}, deleteFile = FALSE) #where the src is wherever you have the picture
output$sygen_summary <- renderImage({
return(list(src = "/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/Data_visualization/new/www/sygen_summary.png",type = "image/png",alt = "sygen_summary", height = "170%"))
}, deleteFile = FALSE) #where the src is wherever you have the picture
demographics<- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/3_Drugs/Data_visualization/new/Data_cleaning/Data/sex.csv", header = T, sep = ',')
output$plot <- renderPlot({
gapminder %>%
filter(year==input$years) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, color=continent, size=pop)) +
geom_point()
})
}
shinyApp(ui, server)
## ---------------------------
##
## Script name: 1_shiny_web_application
##
## Purpose of script: Code underlying the shiny web application
##
##
## Author: Dr. Catherine Jutzeler
##
## Date Created: 2021-01-03
##
## Copyright (c) Catherine Jutzeler, 2021
## Email: catherine.jutzeler@bsse.ethz.ch
##
## ---------------------------
##
## Data source: COVID-19 survey
##
## Notes: This app accompanies the publication of Nightingale et al, 2021 published in XX. [add link here]
##
##
#### ---------------------------
## set working directory
setwd("/Users/jutzca/Documents/Github/COVID-19_Excercise_Neurological_Conditions/shinyapp/")  #replace with your working directory
## ---------------------------
## load up the packages we will need:
library(shiny)
library(shinydashboard)
library(shinythemes)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stats)
library(DT)
library(shinyWidgets)
library(png)
library(plotly)
library(splitstackshape)
library(RColorBrewer)
library(stringr)
library(ggnetwork)
library(networkD3)
library(igraph)
library(intergraph)
library(sna)
## ----------------------------
## Install packages needed:  (uncomment as required)
#if(!require(shiny)){install.packages("shiny")}
#if(!require(shinydashboard)){install.packages("shinydashboard")}
#if(!require(dplyr)){install.packages("dplyr")}
#if(!require(tidyr)){install.packages("tidyr")}
#if(!require(ggplot2)){install.packages("ggplot2")}
#if(!require(stats)){install.packages("stats")}
#if(!require(ggthemes)){install.packages("ggthemes")}
#### ---------------------------
#Clear working space
rm(list = ls())
#### ---------------------------
#Set local system
Sys.setlocale('LC_ALL','C')
#### -------------------------------------------------------------------------- CODE START ------------------------------------------------------------------------------------------------####
ui <- dashboardPage(
#----Dashboard header----
title = "PACorona: Data Visualization",
dashboardHeader(title=span(icon("virus"), "PhysActivity Survey")), #HTML(paste(icon("virus"), "PsyCorona Data Tool"))
#Select 'skin' color: blue, black, green, purple, red, yellow
skin = "yellow",
#----Dashboard sidebar----
dashboardSidebar(
sidebarMenuOutput("menu")
),
dashboardBody()
)
server <- function(input, output) {
output$menu <- renderMenu({
sidebarMenu(
menuItem("Menu item", icon = icon("calendar"))
)
})
}
shinyApp(ui, server)
## ---------------------------
##
## Script name: 1_shiny_web_application
##
## Purpose of script: Code underlying the shiny web application
##
##
## Author: Dr. Catherine Jutzeler
##
## Date Created: 2021-01-03
##
## Copyright (c) Catherine Jutzeler, 2021
## Email: catherine.jutzeler@bsse.ethz.ch
##
## ---------------------------
##
## Data source: COVID-19 survey
##
## Notes: This app accompanies the publication of Nightingale et al, 2021 published in XX. [add link here]
##
##
#### ---------------------------
## set working directory
setwd("/Users/jutzca/Documents/Github/COVID-19_Excercise_Neurological_Conditions/shinyapp/")  #replace with your working directory
## ---------------------------
## load up the packages we will need:
library(shiny)
library(shinydashboard)
library(shinythemes)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stats)
library(DT)
library(shinyWidgets)
library(png)
library(plotly)
library(splitstackshape)
library(RColorBrewer)
library(stringr)
library(ggnetwork)
library(networkD3)
library(igraph)
library(intergraph)
library(sna)
## ----------------------------
## Install packages needed:  (uncomment as required)
#if(!require(shiny)){install.packages("shiny")}
#if(!require(shinydashboard)){install.packages("shinydashboard")}
#if(!require(dplyr)){install.packages("dplyr")}
#if(!require(tidyr)){install.packages("tidyr")}
#if(!require(ggplot2)){install.packages("ggplot2")}
#if(!require(stats)){install.packages("stats")}
#if(!require(ggthemes)){install.packages("ggthemes")}
#### ---------------------------
#Clear working space
rm(list = ls())
#### ---------------------------
#Set local system
Sys.setlocale('LC_ALL','C')
#### -------------------------------------------------------------------------- CODE START ------------------------------------------------------------------------------------------------####
ui <- dashboardPage(
#----Dashboard header----
title = "PACorona: Data Visualization",
dashboardHeader(title=span(icon("fas virus"), "PhysActivity Survey")), #HTML(paste(icon("virus"), "PsyCorona Data Tool"))
#Select 'skin' color: blue, black, green, purple, red, yellow
skin = "yellow",
#----Dashboard sidebar----
dashboardSidebar(
sidebarMenuOutput("menu")
),
dashboardBody()
)
server <- function(input, output) {
output$menu <- renderMenu({
sidebarMenu(
menuItem("Menu item", icon = icon("calendar"))
)
})
}
shinyApp(ui, server)
