Light_sport_Hours_Per_Day_groups<-cut(covid19.survey.data$Light_sport_Hours_Per_Day, c(0,2,6,7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Moderate_sport_Hours_Per_Day_groups<-cut(covid19.survey.data$Moderate_sport_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Strenous_sport_Hours_Per_Day_groups<-cut(covid19.survey.data$Strenous_sport_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Exercise_Hours_Per_Day_groups<-cut(covid19.survey.data$Exercise_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
edentary_Hrs_Per_Day_groups<-cut(covid19.survey.data$Sedentary_Hrs_Per_Day, c(0,2,6,7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Walking_wheeling_Hours_Per_Day_groups<-cut(covid19.survey.data$Walking_wheeling_Hours_Per_Day, c(0,2,6,7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Light_sport_Hours_Per_Day_groups<-cut(covid19.survey.data$Light_sport_Hours_Per_Day, c(0,2,6,7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Moderate_sport_Hours_Per_Day_groups<-cut(covid19.survey.data$Moderate_sport_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Strenous_sport_Hours_Per_Day_groups<-cut(covid19.survey.data$Strenous_sport_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Exercise_Hours_Per_Day_groups<-cut(covid19.survey.data$Exercise_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Light_housework_Hours_Per_Day_groups<-cut(covid19.survey.data$Light_housework_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Heavy_housework_Hours_Per_Day_groups<-cut(covid19.survey.data$Heavy_housework_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Home_repairs_Hours_Per_Day_groups<-cut(covid19.survey.data$Home_repairs_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Yard_work_Hours_Per_Day_groups<-cut(covid19.survey.data$Yard_work_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Gardening_Hours_Per_Day_groups<-cut(covid19.survey.data$Gardening_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Caring_Hours_Per_Day_groups<-cut(covid19.survey.data$Caring_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Work_related_activity_Hours_Per_Day_groups<-cut(covid19.survey.data$Work_related_activity_Hours_Per_Dayy, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Work_related_activity_Hours_Per_Day_groups<-cut(covid19.survey.data$Work_related_activity_Hours_Per_Day, c(0,2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
table1::table1(~ Sedentary_Hrs_Per_Day+Sedentary_Hrs_Per_Day_groups+
Walking_wheeling_Hours_Per_Day+Walking_wheeling_Hours_Per_Day_groups+
Light_sport_Hours_Per_Day+Light_sport_Hours_Per_Day_groups+
Moderate_sport_Hours_Per_Day+Moderate_sport_Hours_Per_Day_groups+
Strenous_sport_Hours_Per_Day+Strenous_sport_Hours_Per_Day_groups+
Exercise_Hours_Per_Day+Exercise_Hours_Per_Day_groups+
Light_housework_Hours_Per_Day+Light_housework_Hours_Per_Day_groups+
Heavy_housework_Hours_Per_Day+Heavy_housework_Hours_Per_Day_groups+
Home_repairs_Hours_Per_Day+Home_repairs_Hours_Per_Day_groups+
Yard_work_Hours_Per_Day+Yard_work_Hours_Per_Day_groups+
Gardening_Hours_Per_Day+Gardening_Hours_Per_Day_groups+
Caring_Hours_Per_Day+Caring_Hours_Per_Day_groups+
Work_related_activity_Hours_Per_Day+Work_related_activity_Hours_Per_Day_groups , data = covid19.survey.data, render.continuous=c(.="Median [Q1, Q3]"))
covid19.survey.data$Work_related_activity_Hours_Per_Day
Work_related_activity_Hours_Per_Day_groups
is.numeric(covid19.survey.data$Work_related_activity_Hours_Per_Day)
Work_related_activity_Hours_Per_Day_groups<-cut(covid19.survey.data$Work_related_activity_Hours_Per_Day, c(0,1,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
table1::table1(~ Sedentary_Hrs_Per_Day+Sedentary_Hrs_Per_Day_groups+
Walking_wheeling_Hours_Per_Day+Walking_wheeling_Hours_Per_Day_groups+
Light_sport_Hours_Per_Day+Light_sport_Hours_Per_Day_groups+
Moderate_sport_Hours_Per_Day+Moderate_sport_Hours_Per_Day_groups+
Strenous_sport_Hours_Per_Day+Strenous_sport_Hours_Per_Day_groups+
Exercise_Hours_Per_Day+Exercise_Hours_Per_Day_groups+
Light_housework_Hours_Per_Day+Light_housework_Hours_Per_Day_groups+
Heavy_housework_Hours_Per_Day+Heavy_housework_Hours_Per_Day_groups+
Home_repairs_Hours_Per_Day+Home_repairs_Hours_Per_Day_groups+
Yard_work_Hours_Per_Day+Yard_work_Hours_Per_Day_groups+
Gardening_Hours_Per_Day+Gardening_Hours_Per_Day_groups+
Caring_Hours_Per_Day+Caring_Hours_Per_Day_groups+
Work_related_activity_Hours_Per_Day+Work_related_activity_Hours_Per_Day_groups , data = covid19.survey.data, render.continuous=c(.="Median [Q1, Q3]"))
Work_related_activity_Hours_Per_Day_groups<-cut(covid19.survey.data$Work_related_activity_Hours_Per_Day, c(0,0, 2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Work_related_activity_Hours_Per_Day_groups<-cut(covid19.survey.data$Work_related_activity_Hours_Per_Day, c(0.00,0, 2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Work_related_activity_Hours_Per_Day_groups<-cut(covid19.survey.data$Work_related_activity_Hours_Per_Day, c(0.00, 2,6, 7),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Work_related_activity_Hours_Per_Day_groups
Work_related_activity_Hours_Per_Day_groups<-cut(covid19.survey.data$Work_related_activity_Hours_Per_Day, c(0,2,6),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Work_related_activity_Hours_Per_Day_groups<-cut(covid19.survey.data$Work_related_activity_Hours_Per_Day, c(0,2,5,6),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
table1::table1(~ Sedentary_Hrs_Per_Day+Sedentary_Hrs_Per_Day_groups+
Walking_wheeling_Hours_Per_Day+Walking_wheeling_Hours_Per_Day_groups+
Light_sport_Hours_Per_Day+Light_sport_Hours_Per_Day_groups+
Moderate_sport_Hours_Per_Day+Moderate_sport_Hours_Per_Day_groups+
Strenous_sport_Hours_Per_Day+Strenous_sport_Hours_Per_Day_groups+
Exercise_Hours_Per_Day+Exercise_Hours_Per_Day_groups+
Light_housework_Hours_Per_Day+Light_housework_Hours_Per_Day_groups+
Heavy_housework_Hours_Per_Day+Heavy_housework_Hours_Per_Day_groups+
Home_repairs_Hours_Per_Day+Home_repairs_Hours_Per_Day_groups+
Yard_work_Hours_Per_Day+Yard_work_Hours_Per_Day_groups+
Gardening_Hours_Per_Day+Gardening_Hours_Per_Day_groups+
Caring_Hours_Per_Day+Caring_Hours_Per_Day_groups+
Work_related_activity_Hours_Per_Day+Work_related_activity_Hours_Per_Day_groups , data = covid19.survey.data, render.continuous=c(.="Median [Q1, Q3]"))
Work_related_activity_Hours_Per_Day_groups
covid19.survey.data$Work_related_activity_Hours_Per_Day
Work_related_activity_Hours_Per_Day_groups<-cut(covid19.survey.data$Work_related_activity_Hours_Per_Day, c(0,1,2,4),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Work_related_activity_Hours_Per_Day_groups
summary(covid19.survey.data$Work_related_activity_Hours_Per_Day)
Work_related_activity_Hours_Per_Day_groups<-cut(covid19.survey.data$Work_related_activity_Hours_Per_Day, c(0,0.1,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
table1::table1(~ Sedentary_Hrs_Per_Day+Sedentary_Hrs_Per_Day_groups+
Walking_wheeling_Hours_Per_Day+Walking_wheeling_Hours_Per_Day_groups+
Light_sport_Hours_Per_Day+Light_sport_Hours_Per_Day_groups+
Moderate_sport_Hours_Per_Day+Moderate_sport_Hours_Per_Day_groups+
Strenous_sport_Hours_Per_Day+Strenous_sport_Hours_Per_Day_groups+
Exercise_Hours_Per_Day+Exercise_Hours_Per_Day_groups+
Light_housework_Hours_Per_Day+Light_housework_Hours_Per_Day_groups+
Heavy_housework_Hours_Per_Day+Heavy_housework_Hours_Per_Day_groups+
Home_repairs_Hours_Per_Day+Home_repairs_Hours_Per_Day_groups+
Yard_work_Hours_Per_Day+Yard_work_Hours_Per_Day_groups+
Gardening_Hours_Per_Day+Gardening_Hours_Per_Day_groups+
Caring_Hours_Per_Day+Caring_Hours_Per_Day_groups+
Work_related_activity_Hours_Per_Day+Work_related_activity_Hours_Per_Day_groups , data = covid19.survey.data, render.continuous=c(.="Median [Q1, Q3]"))
Work_related_activity_Hours_Per_Day_groups
Work_related_activity_Hours_Per_Day_groups<-cut(covid19.survey.data$Work_related_activity_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Work_related_activity_Hours_Per_Day_groups
Sedentary_Hrs_Per_Day_groups<-cut(covid19.survey.data$Sedentary_Hrs_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Walking_wheeling_Hours_Per_Day_groups<-cut(covid19.survey.data$Walking_wheeling_Hours_Per_Day, c(-1,0,2,5,
Light_sport_Hours_Per_Day_groups<-cut(covid19.survey.data$Light_sport_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Moderate_sport_Hours_Per_Day_groups<-cut(covid19.survey.data$Moderate_sport_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Strenous_sport_Hours_Per_Day_groups<-cut(covid19.survey.data$Strenous_sport_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Exercise_Hours_Per_Day_groups<-cut(covid19.survey.data$Exercise_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Light_housework_Hours_Per_Day_groups<-cut(covid19.survey.data$Light_housework_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Walking_wheeling_Hours_Per_Day_groups<-cut(covid19.survey.data$Walking_wheeling_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Light_sport_Hours_Per_Day_groups<-cut(covid19.survey.data$Light_sport_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Moderate_sport_Hours_Per_Day_groups<-cut(covid19.survey.data$Moderate_sport_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Strenous_sport_Hours_Per_Day_groups<-cut(covid19.survey.data$Strenous_sport_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Exercise_Hours_Per_Day_groups<-cut(covid19.survey.data$Exercise_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Light_housework_Hours_Per_Day_groups<-cut(covid19.survey.data$Light_housework_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Heavy_housework_Hours_Per_Day_groups<-cut(covid19.survey.data$Heavy_housework_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Home_repairs_Hours_Per_Day_groups<-cut(covid19.survey.data$Home_repairs_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Yard_work_Hours_Per_Day_groups<-cut(covid19.survey.data$Yard_work_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Gardening_Hours_Per_Day_groups<-cut(covid19.survey.data$Gardening_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Caring_Hours_Per_Day_groups<-cut(covid19.survey.data$Caring_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
Work_related_activity_Hours_Per_Day_groups<-cut(covid19.survey.data$Work_related_activity_Hours_Per_Day, c(-1,0,2,5),
labels=c("0 hrs", ">0-2 hrs",">2 hrs"))
table1::table1(~ Sedentary_Hrs_Per_Day+Sedentary_Hrs_Per_Day_groups+
Walking_wheeling_Hours_Per_Day+Walking_wheeling_Hours_Per_Day_groups+
Light_sport_Hours_Per_Day+Light_sport_Hours_Per_Day_groups+
Moderate_sport_Hours_Per_Day+Moderate_sport_Hours_Per_Day_groups+
Strenous_sport_Hours_Per_Day+Strenous_sport_Hours_Per_Day_groups+
Exercise_Hours_Per_Day+Exercise_Hours_Per_Day_groups+
Light_housework_Hours_Per_Day+Light_housework_Hours_Per_Day_groups+
Heavy_housework_Hours_Per_Day+Heavy_housework_Hours_Per_Day_groups+
Home_repairs_Hours_Per_Day+Home_repairs_Hours_Per_Day_groups+
Yard_work_Hours_Per_Day+Yard_work_Hours_Per_Day_groups+
Gardening_Hours_Per_Day+Gardening_Hours_Per_Day_groups+
Caring_Hours_Per_Day+Caring_Hours_Per_Day_groups+
Work_related_activity_Hours_Per_Day+Work_related_activity_Hours_Per_Day_groups , data = covid19.survey.data, render.continuous=c(.="Median [Q1, Q3]"))
table1::table1(~ Sedentary_Hrs_Per_Day+Sedentary_Hrs_Per_Day_groups+
Walking_wheeling_Hours_Per_Day+Walking_wheeling_Hours_Per_Day_groups+
Light_sport_Hours_Per_Day+Light_sport_Hours_Per_Day_groups+
Moderate_sport_Hours_Per_Day+Moderate_sport_Hours_Per_Day_groups+
Strenous_sport_Hours_Per_Day+Strenous_sport_Hours_Per_Day_groups+
Exercise_Hours_Per_Day+Exercise_Hours_Per_Day_groups+
Light_housework_Hours_Per_Day+Light_housework_Hours_Per_Day_groups+
Heavy_housework_Hours_Per_Day+Heavy_housework_Hours_Per_Day_groups+
Home_repairs_Hours_Per_Day+Home_repairs_Hours_Per_Day_groups+
Yard_work_Hours_Per_Day+Yard_work_Hours_Per_Day_groups+
Gardening_Hours_Per_Day+Gardening_Hours_Per_Day_groups+
Caring_Hours_Per_Day+Caring_Hours_Per_Day_groups+
Work_related_activity_Hours_Per_Day+Work_related_activity_Hours_Per_Day_groups | condition, data = covid19.survey.data, render.continuous=c(.="Median [Q1, Q3]"))
table1::table1(~ Sedentary_Hrs_Per_Day+Sedentary_Hrs_Per_Day_groups+
Walking_wheeling_Hours_Per_Day+Walking_wheeling_Hours_Per_Day_groups+
Light_sport_Hours_Per_Day+Light_sport_Hours_Per_Day_groups+
Moderate_sport_Hours_Per_Day+Moderate_sport_Hours_Per_Day_groups+
Strenous_sport_Hours_Per_Day+Strenous_sport_Hours_Per_Day_groups+
Exercise_Hours_Per_Day+Exercise_Hours_Per_Day_groups+
Light_housework_Hours_Per_Day+Light_housework_Hours_Per_Day_groups+
Heavy_housework_Hours_Per_Day+Heavy_housework_Hours_Per_Day_groups+
Home_repairs_Hours_Per_Day+Home_repairs_Hours_Per_Day_groups+
Yard_work_Hours_Per_Day+Yard_work_Hours_Per_Day_groups+
Gardening_Hours_Per_Day+Gardening_Hours_Per_Day_groups+
Caring_Hours_Per_Day+Caring_Hours_Per_Day_groups+
Work_related_activity_Hours_Per_Day+Work_related_activity_Hours_Per_Day_groups | Condition, data = covid19.survey.data, render.continuous=c(.="Median [Q1, Q3]"))
covid19.survey.data$Household_activity_SCORE
covid19.survey.data$Work_related_activity_SCORE
covid19.survey.data$PASIDP_SCORE
table1::table1(~ Sedentary_Hrs_Per_Day+Sedentary_Hrs_Per_Day_groups+
Walking_wheeling_Hours_Per_Day+Walking_wheeling_Hours_Per_Day_groups+
Light_sport_Hours_Per_Day+Light_sport_Hours_Per_Day_groups+
Moderate_sport_Hours_Per_Day+Moderate_sport_Hours_Per_Day_groups+
Strenous_sport_Hours_Per_Day+Strenous_sport_Hours_Per_Day_groups+
Exercise_Hours_Per_Day+Exercise_Hours_Per_Day_groups+
Light_housework_Hours_Per_Day+Light_housework_Hours_Per_Day_groups+
Heavy_housework_Hours_Per_Day+Heavy_housework_Hours_Per_Day_groups+
Home_repairs_Hours_Per_Day+Home_repairs_Hours_Per_Day_groups+
Yard_work_Hours_Per_Day+Yard_work_Hours_Per_Day_groups+
Gardening_Hours_Per_Day+Gardening_Hours_Per_Day_groups+
Caring_Hours_Per_Day+Caring_Hours_Per_Day_groups+
Work_related_activity_Hours_Per_Day+Work_related_activity_Hours_Per_Day_groups +LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+PASIDP_SCORE, data = covid19.survey.data, render.continuous=c(.="Median [Q1, Q3]"))
#--------- URP: PASIDP_SCORE ----------
urp.model.PASIDP_SCORE2<-partykit::ctree(PASIDP_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+Sedentary_Hrs_Per_Day+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE, data=covid19.survey.data, na.action = na.pass)
urp.model.PASIDP_SCORE2
plot(urp.model.PASIDP_SCORE2)
## ---------------------------
##
## Script name: 3_GLM_and_URP
##
## Purpose of script: To determine predictors of physical activity using GLMs and URP.
##
## Author: Dr. Catherine Jutzeler
##
## Date Created: 2020-12-08
##
## Copyright (c) Catherine Jutzeler, 2020
## Email: catherine.jutzeler@bsse.ethz.ch
##
## ---------------------------
##
## Data source: COVID-19 survey
##
## Notes: This analysis is for the publication Nightingale et al, 2021 published in XX. [add link here]
##
## https://www.pluralsight.com/guides/linear-lasso-and-ridge-regression-with-r
##
## ---------------------------
##
## load up the packages we will need:
##
library(partykit)
library(plyr)
library(readr)
library(dplyr)
library(caret)
library(ggplot2)
library(repr)
library(glmnet)
library(reshape2)
library(sjPlot)
##
## ----------------------------
##
## Install packages needed:  (uncomment as required)
##
# if(!require(partykit)){install.packages("partykit")}
# if(!require(plyr)){install.packages("plyr")}
# if(!require(readr)){install.packages("readr")}
# if(!require(dplyr)){install.packages("dplyr")}
# if(!require(caret)){install.packages("caret")}
# if(!require(ggplot2)){install.packages("ggplot2")}
# if(!require(repr)){install.packages("repr")}
# if(!require(glmnet)){install.packages("glmnet")}
# if(!require(sjPlot)){install.packages("sjPlot")}
# if(!require(reshape2)){install.packages("reshape2")}
##
#### ---------------------------
##
## R Studio Clean-Up:
cat("\014") # clear console
rm(list=ls()) # clear workspace
gc() # garbage collector
##
#### ---------------------------
##
## Set working directory and output directorypaths
##
setwd("/Users/jutzca/Documents/Github/COVID-19_Excercise_Neurological_Conditions/")
##
##
outdir_figures='/Users/jutzca/Documents/Github/COVID-19_Excercise_Neurological_Conditions/Figures/'
outdir_tables='/Users/jutzca/Documents/Github/COVID-19_Excercise_Neurological_Conditions/Tables/'
##
#### -------------------------------------------------------------------------- CODE START ------------------------------------------------------------------------------------------------####
# Load original data
covid19.survey.data <- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/19_COVID_Survey/covid19_data_survey.csv", header = T, sep = ',')
# Display all the variable names
names(covid19.survey.data)
# Take a glimpse at the data and its structure
dplyr::glimpse(covid19.survey.data)
#--------- Non-linear GLM: Depression ----------
# Subset data
covid19.survey.data.depression <-subset(covid19.survey.data, Depression_SCORE> 0)
# Create model
glm.depression <- glm(Depression_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+PASIDP_SCORE+Sedentary_Hrs_Per_Day, family = Gamma(), data = covid19.survey.data.depression)
summary(glm.depression)
sjPlot::tab_model(glm.depression)
# Plot model output
plot(glm.depression)
covid19.survey.data.anxiety <-subset(covid19.survey.data, Anxiety_SCORE> 0)
# Create model
glm.anxiety <- glm(Anxiety_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+PASIDP_SCORE+Sedentary_Hrs_Per_Day, family = Gamma(), data = covid19.survey.data.anxiety)
summary(glm.anxiety)
sjPlot::tab_model(glm.anxiety)
# Plot model output
plot(glm.anxiety)
covid19.survey.data.HAQ_SDI_Mean <-subset(covid19.survey.data, HAQ_SDI_Mean> 0)
# Create model
glm.HAQ_SDI_Mean <- glm(HAQ_SDI_Mean~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, family = Gamma(), data = covid19.survey.data.HAQ_SDI_Mean)
summary(glm.HAQ_SDI_Mean)
sjPlot::tab_model(glm.HAQ_SDI_Mean)
# Plot model output
plot(glm.HAQ_SDI_Mean)
covid19.survey.data.Pain <-subset(covid19.survey.data, Pain> 0)
# Create model
glm.Pain <- glm(Pain~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, family = Gamma(), data = covid19.survey.data.Pain)
summary(glm.Pain)
sjPlot::tab_model(glm.Pain)
# Plot model output
plot(glm.Pain)
covid19.survey.data.FSS_SCORE <-subset(covid19.survey.data, FSS_SCORE> 0)
# Create model
glm.FSS_SCORE <- glm(FSS_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, family = Gamma(), data = covid19.survey.data.FSS_SCORE)
summary(glm.FSS_SCORE)
sjPlot::tab_model(glm.FSS_SCORE)
# Plot model output
plot(glm.FSS_SCORE)
# Subset data
covid19.survey.data.UCLA_Loneliness_SCORE <-subset(covid19.survey.data, UCLA_Loneliness_SCORE> 0)
# Create model
glm.UCLA_Loneliness_SCORE <- glm(UCLA_Loneliness_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, family = Gamma(), data = covid19.survey.data.UCLA_Loneliness_SCORE)
summary(glm.UCLA_Loneliness_SCORE)
sjPlot::tab_model(glm.UCLA_Loneliness_SCORE)
# Plot model output
plot(glm.UCLA_Loneliness_SCORE)
#--------- URP: Depression ----------
urp.model.depression<-partykit::ctree(Depression_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, data=covid19.survey.data, na.action = na.pass)
urp.model.depression
plot(urp.model.depression)
info_node(node_party(urp.model.depression))
#--------- URP: Anxiety ----------
#subset data to remove NA from the y variable
Anxiety_score_without_na <-subset(covid19.survey.data, (!is.na(Anxiety_SCORE)))
urp.model.anxiety<-partykit::ctree(Anxiety_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, data=Anxiety_score_without_na, na.action = na.pass)
urp.model.anxiety
plot(urp.model.anxiety)
info_node(node_party(urp.model.anxiety))
#--------- URP: HAQ_SDI_Mean ----------
urp.model.HAQ_SDI_Mean<-partykit::ctree(HAQ_SDI_Mean~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, data=covid19.survey.data, na.action = na.pass)
urp.model.HAQ_SDI_Mean
plot(urp.model.HAQ_SDI_Mean)
info_node(node_party(urp.model.HAQ_SDI_Mean))
#--------- URP: Pain ----------
urp.model.pain<-partykit::ctree(Pain~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, data=covid19.survey.data, na.action = na.pass)
urp.model.pain
plot(urp.model.pain)
info_node(node_party(urp.model.pain))
#--------- URP: Change in PA ----------
urp.model.change_in_PA<-partykit::ctree(Change_in_PA~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, data=covid19.survey.data, na.action = na.pass)
urp.model.change_in_PA
plot(urp.model.change_in_PA)
info_node(node_party(urp.model.change_in_PA))
#--------- URP: Fatigue ----------
urp.model.fatigue<-partykit::ctree(FSS_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, data=covid19.survey.data, na.action = na.pass)
urp.model.fatigue
plot(urp.model.fatigue)
info_node(node_party(urp.model.fatigue))
#--------- URP: Vitality ----------
urp.model.vitality<-partykit::ctree(SVS_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, data=covid19.survey.data, na.action = na.pass)
urp.model.vitality
plot(urp.model.vitality)
info_node(node_party(urp.model.vitality))
urp.model.vitality
plot(urp.model.vitality)
#--------- URP: Vitality ----------
urp.model.vitality<-partykit::ctree(SVS_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, data=covid19.survey.data, na.action = na.pass)
urp.model.vitality
plot(urp.model.vitality)
info_node(node_party(urp.model.vitality))
# Subset data
covid19.survey.data.SVS_SCORE <-subset(covid19.survey.data, SVS_SCORE> 0)
# Create model
glm.SVS_SCORE <- glm(SVS_SCORE~Age+as.factor(Sex)+as.factor(Situation)+as.factor(Condition)+as.factor(Mobility_Aid)+LTPA_SCORE+Household_activity_SCORE+Work_related_activity_SCORE+Sedentary_Hrs_Per_Day, family = Gamma(), data = covid19.survey.data.UCLA_Loneliness_SCORE)
summary(glm.SVS_SCORE)
sjPlot::tab_model(glm.SVS_SCORE)
# Plot model output
plot(glm.SVS_SCORE)
##
## Script name: 1_COVID-19_survey
##
## Purpose of script: To analyze and visualize the data from the COVID-19 survey assessing how the COVID-10 pamdemic has impacted the physical activity in patients
##                    suffering from neurological diseases. This code was written to create Table 1 and 2 of the manuscript.
##
## Author: Dr. Catherine Jutzeler
##
## Date Created: 2020-12-3
##
## Copyright (c) Catherine Jutzeler, 2020
## Email: catherine.jutzeler@bsse.ethz.ch
##
## ---------------------------
##
## Data source: COVID-19 survey
##
## Notes: This analysis is for the publication Nightingale et al, 2021 published in XX. [add link here]
##
## ---------------------------
##
## load up the packages we will need:
##
library(table1)
library(ggplot2)
library(likert)
library(HH)
library(dplyr)
library(Hmisc)
library(finalfit)
##
## ----------------------------
##
## Install packages needed:  (uncomment as required)
##
#if(!require(table1)){install.packages("table1")}
#if(!require(ggplot2)){install.packages("ggplot2")}
#if(!require(likert)){install.packages("likert")}
#if(!require(HH)){install.packages("HH")}
#if(!require(dplyr)){install.packages("dplyr")}
#if(!require(Hmisc)){install.packages("Hmisc")}
#if(!require(finalfit)){install.packages("finalfit")}
##
#### ---------------------------
##
## R Studio Clean-Up:
cat("\014") # clear console
rm(list=ls()) # clear workspace
gc() # garbage collector
##
#### ---------------------------
##
## Set working directory and output directorypaths
##
setwd("/Users/jutzca/Documents/Github/COVID-19_Excercise_Neurological_Conditions/")
##
##
outdir_figures='/Users/jutzca/Documents/Github/COVID-19_Excercise_Neurological_Conditions/Figures/'
outdir_tables='/Users/jutzca/Documents/Github/COVID-19_Excercise_Neurological_Conditions/Tables/'
##
#### -------------------------------------------------------------------------- CODE START ------------------------------------------------------------------------------------------------####
# Load original data
covid19.survey.data <- read.csv("/Volumes/jutzelec$/8_Projects/1_Ongoing/19_COVID_Survey/covid19_data_survey.csv", header = T, sep = ',')
names(covid19.survey.data)
#---------- Data cleaning and assessment ----------
# 1. Count number of NA's in entire dataframe
sum(is.na(covid19.survey.data))
# 2. Count number of NA's per coloumn
na_count <-sapply(covid19.survey.data, function(y) sum(length(which(is.na(y))))) %>%
as.data.frame()%>%sum()
na_count
#write.csv(na_count, '/Users/jutzca/Documents/Github/COVID-19_Excercise_Neurological_Conditions/Tables/number_of_NA.csv')
# 3. Count number of complete answers
full_count <-sapply(covid19.survey.data, function(y) sum(length(which(!(is.na(y)))))) %>%
as.data.frame()%>%sum()
full_count
# 4. Assess mechanism of missingness
# Examine with ff_glimpse
covid19.survey.data %>%
finalfit::ff_glimpse()
# Identify missing values in each variable
covid19.survey.data %>%
finalfit::missing_plot()
# Look for patterns of missingness
missing.data.pattern.plot <- covid19.survey.data %>%
finalfit::missing_pattern()
missing.data.pattern.plot
#---------- Create Summary Table of Included Cohort ----------
# Formatting of table: Customize levels, labels, and units of listed variables
# 1. Change class of variables
covid19.survey.data$GRSI <- as.factor(covid19.survey.data$GRSI )
# 2. Change order of levels of specific factors
covid19.survey.data$Situation <- factor(covid19.survey.data$Situation, levels = c("self-imposed isolation", "goverment-issued isolation",
"social distancing", "none", "other"))
covid19.survey.data$Mobility_Aid <- factor(covid19.survey.data$Mobility_Aid, levels = c("manual wheelchair","powered wheelchair", "mobility scooter", "zimmer frame","walking sticks", "crutches",
"none", "other"))
# 3. Change names of levels of variables
levels(covid19.survey.data$Sex) <- c("Female", "Male", "Prefer not to disclose")
levels(covid19.survey.data$Ethnicity) <- c("Asian/Asian British", "Black/African/Caribbean/Black British", "Caucasian/White", "Mixed/multiple ethnic groups", 'Other')
levels(covid19.survey.data$Situation) <- c("Self-imposed isolation/shielded (considered at-risk)", "Isolation due to government legislation",
"Practising social distancing", "None of the above", "Other")
levels(covid19.survey.data$Condition) <- c("Cerebral Palsy", "Fibromyalgia, Chronic fatigue syndrome, CRPS" , "Muscular dystrophy, neuromuscular diseases",
"Multiple Sclerosis", "Parkinson's disease", "Spinal Cord Injury", "Stroke, ataxia's, other (spina bifida, dystonia)")
levels(covid19.survey.data$Mobility_Aid) <- c("Manual wheelchair","Power wheelchair", "Mobility scooter", "Zimmer frame","Walking sticks", "Crutches",
"None", "Other")
# 4. Relable variables
Hmisc::label(covid19.survey.data$Sex) <- "Sex, n (%)"
Hmisc::label(covid19.survey.data$Age) <- "Age"
Hmisc::label(covid19.survey.data$Mobility_Aid) <- "Mobility Aid, n (%)"
Hmisc::label(covid19.survey.data$GRSI) <- "Government Response Stringency Index, n (%)"
Hmisc::label(covid19.survey.data$Condition) <- 'Condition, n (%)'
Hmisc::label(covid19.survey.data$Ethnicity) <- 'Ethnicity, n (%)'
Hmisc::label(covid19.survey.data$Situation) <- 'Situation, n (%)'
Hmisc::label(covid19.survey.data$HAQ_SDI_Mean) <- 'HAQ SDI'
# 5. Assign units to Age at Injury and Year of Injury
units(covid19.survey.data$Age) <- "years"
# 6. Print table
# Table 1: Demographics
table1::table1(~ Sex+Age+Ethnicity+Condition+Mobility_Aid+Situation+GRSI, data = covid19.survey.data, render.continuous=c(.="Median [Q1, Q3]"))
# Table 2: Outcomes
table1::table1(~ Depression_SCORE+Anxiety_SCORE+Global_Fatigue+Fear_of_COVID_19_SCORE+UCLA_Loneliness_SCORE+HAQ_SDI_Mean+Pain+Sedentary_Hrs_Per_Day+Exercise_SCORE+LTPA_SCORE | Condition,
data = covid19.survey.data, render.continuous=c(.="Median [Q1, Q3]"))
# Table 2: Outcomes
table1::table1(~ Depression_SCORE+Anxiety_SCORE+Global_Fatigue+Fear_of_COVID_19_SCORE+UCLA_Loneliness_SCORE+SVS_Score+HAQ_SDI_Mean+Pain+Sedentary_Hrs_Per_Day+Exercise_SCORE+LTPA_SCORE | Condition,
data = covid19.survey.data, render.continuous=c(.="Median [Q1, Q3]"))
# Table 2: Outcomes
table1::table1(~ Depression_SCORE+Anxiety_SCORE+Global_Fatigue+Fear_of_COVID_19_SCORE+UCLA_Loneliness_SCORE+SVS_SCORE+HAQ_SDI_Mean+Pain+Sedentary_Hrs_Per_Day+Exercise_SCORE+LTPA_SCORE | Condition,
data = covid19.survey.data, render.continuous=c(.="Median [Q1, Q3]"))
